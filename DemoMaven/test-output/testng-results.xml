<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" ignored="1" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="101044" started-at="2019-06-11T04:16:24Z" finished-at="2019-06-11T04:18:05Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="12034" started-at="2019-06-11T04:16:24Z" finished-at="2019-06-11T04:16:36Z">
      <class name="com.tests.BasicExtentReport">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="initialize" is-config="true" duration-ms="7878" started-at="2019-06-11T04:16:24Z" finished-at="2019-06-11T04:16:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="startReport(java.lang.String, java.lang.String)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="startReport" is-config="true" duration-ms="181" started-at="2019-06-11T04:16:31Z" depends-on-methods="com.tests.TestBase.initialize" finished-at="2019-06-11T04:16:32Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="TC1()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TC1" duration-ms="10" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="getResult" is-config="true" duration-ms="8" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC1 status=SUCCESS method=BasicExtentReport.TC1()[pri:0, instance:com.tests.BasicExtentReport@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TC2()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TC2" duration-ms="2" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC2 status=SUCCESS method=BasicExtentReport.TC2()[pri:0, instance:com.tests.BasicExtentReport@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TC3()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TC3" duration-ms="1" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC3 status=SUCCESS method=BasicExtentReport.TC3()[pri:0, instance:com.tests.BasicExtentReport@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="TC4()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TC4" duration-ms="2020" started-at="2019-06-11T04:16:32Z" finished-at="2019-06-11T04:16:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.tests.BasicExtentReport.TC4(BasicExtentReport.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-11T04:16:34Z" finished-at="2019-06-11T04:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC5 status=SKIP method=BasicExtentReport.TC5()[pri:0, instance:com.tests.BasicExtentReport@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="tearDown" is-config="true" duration-ms="330" started-at="2019-06-11T04:16:34Z" finished-at="2019-06-11T04:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-11T04:16:34Z" finished-at="2019-06-11T04:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC4 status=FAILURE method=BasicExtentReport.TC4()[pri:0, instance:com.tests.BasicExtentReport@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="TC5()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TC5" duration-ms="0" started-at="2019-06-11T04:16:34Z" finished-at="2019-06-11T04:16:34Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test with exception
at com.tests.BasicExtentReport.TC5(BasicExtentReport.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC5 -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:com.tests.BasicExtentReport@73846619]" name="TeardownTest" is-config="true" duration-ms="1063" started-at="2019-06-11T04:16:35Z" depends-on-methods="com.tests.BasicExtentReport.tearDown" finished-at="2019-06-11T04:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.BasicExtentReport -->
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="22108" started-at="2019-06-11T04:16:36Z" finished-at="2019-06-11T04:16:58Z">
      <class name="com.tests.LoginTests">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.tests.LoginTests@2286778]" name="initialize" is-config="true" duration-ms="5196" started-at="2019-06-11T04:16:36Z" finished-at="2019-06-11T04:16:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="setupTestData()[pri:0, instance:com.tests.LoginTests@2286778]" name="setupTestData" is-config="true" duration-ms="844" started-at="2019-06-11T04:16:41Z" depends-on-methods="com.tests.TestBase.initialize" finished-at="2019-06-11T04:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestData -->
        <test-method status="PASS" signature="TestLogin()[pri:0, instance:com.tests.LoginTests@2286778]" name="TestLogin" duration-ms="14843" started-at="2019-06-11T04:16:42Z" description="LOGIN" finished-at="2019-06-11T04:16:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestLogin -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:com.tests.LoginTests@2286778]" name="TeardownTest" is-config="true" duration-ms="1223" started-at="2019-06-11T04:16:57Z" finished-at="2019-06-11T04:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.LoginTests -->
    </test> <!-- Test2 -->
    <test name="Test3" duration-ms="46055" started-at="2019-06-11T04:16:58Z" finished-at="2019-06-11T04:17:44Z">
      <class name="com.tests.ScenarioTest1">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.tests.ScenarioTest1@44c03695]" name="initialize" is-config="true" duration-ms="5596" started-at="2019-06-11T04:16:58Z" finished-at="2019-06-11T04:17:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="Test1()[pri:0, instance:com.tests.ScenarioTest1@44c03695]" name="Test1" duration-ms="39306" started-at="2019-06-11T04:17:03Z" finished-at="2019-06-11T04:17:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:com.tests.ScenarioTest1@44c03695]" name="TeardownTest" is-config="true" duration-ms="1150" started-at="2019-06-11T04:17:43Z" finished-at="2019-06-11T04:17:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.ScenarioTest1 -->
    </test> <!-- Test3 -->
    <test name="Test4" duration-ms="20745" started-at="2019-06-11T04:17:44Z" finished-at="2019-06-11T04:18:05Z">
      <class name="com.tests.ScenarioTest2">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.tests.ScenarioTest2@6989da5e]" name="initialize" is-config="true" duration-ms="5180" started-at="2019-06-11T04:17:44Z" finished-at="2019-06-11T04:17:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="Test2()[pri:0, instance:com.tests.ScenarioTest2@6989da5e]" name="Test2" duration-ms="7799" started-at="2019-06-11T04:17:49Z" finished-at="2019-06-11T04:17:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="FAIL" signature="Test3()[pri:0, instance:com.tests.ScenarioTest2@6989da5e]" name="Test3" duration-ms="5799" started-at="2019-06-11T04:17:57Z" finished-at="2019-06-11T04:18:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Google] but found [Google News]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Google] but found [Google News]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.tests.ScenarioTest2.Test3(ScenarioTest2.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:com.tests.ScenarioTest2@6989da5e]" name="TeardownTest" is-config="true" duration-ms="1180" started-at="2019-06-11T04:18:03Z" finished-at="2019-06-11T04:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.ScenarioTest2 -->
    </test> <!-- Test4 -->
  </suite> <!-- Suite -->
</testng-results>
