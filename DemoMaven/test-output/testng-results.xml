<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="11" passed="6" failed="3" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-06-19T16:21:29Z" name="Suite" finished-at="2019-06-19T16:25:15Z" duration-ms="225455">
    <groups>
    </groups>
    <test started-at="2019-06-19T16:21:29Z" name="Test1" finished-at="2019-06-19T16:21:53Z" duration-ms="23283">
      <class name="com.tests.BasicExtentReport">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:29Z" name="initialize" finished-at="2019-06-19T16:21:38Z" duration-ms="8085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="startReport(java.lang.String, java.lang.String)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="startReport" finished-at="2019-06-19T16:21:38Z" depends-on-methods="com.tests.TestBase.initialize" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="TC1()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="TC1" finished-at="2019-06-19T16:21:38Z" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="getResult" finished-at="2019-06-19T16:21:38Z" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC1 status=SUCCESS method=BasicExtentReport.TC1()[pri:0, instance:com.tests.BasicExtentReport@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="TC2()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="TC2" finished-at="2019-06-19T16:21:38Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="getResult" finished-at="2019-06-19T16:21:38Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC2 status=SUCCESS method=BasicExtentReport.TC2()[pri:0, instance:com.tests.BasicExtentReport@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="TC3()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="TC3" finished-at="2019-06-19T16:21:38Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="getResult" finished-at="2019-06-19T16:21:38Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC3 status=SUCCESS method=BasicExtentReport.TC3()[pri:0, instance:com.tests.BasicExtentReport@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="TC4()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:38Z" name="TC4" finished-at="2019-06-19T16:21:48Z" duration-ms="10017" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.tests.BasicExtentReport.TC4(BasicExtentReport.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC4 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:49Z" name="getResult" finished-at="2019-06-19T16:21:49Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC4 status=FAILURE method=BasicExtentReport.TC4()[pri:0, instance:com.tests.BasicExtentReport@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="TC5()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:49Z" name="TC5" finished-at="2019-06-19T16:21:49Z" duration-ms="11" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test with exception
at com.tests.BasicExtentReport.TC5(BasicExtentReport.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC5 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:49Z" name="getResult" finished-at="2019-06-19T16:21:49Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC5 status=SKIP method=BasicExtentReport.TC5()[pri:0, instance:com.tests.BasicExtentReport@54c562f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:49Z" name="tearDown" finished-at="2019-06-19T16:21:52Z" duration-ms="2435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:com.tests.BasicExtentReport@54c562f7]" started-at="2019-06-19T16:21:52Z" name="TeardownTest" finished-at="2019-06-19T16:21:53Z" depends-on-methods="com.tests.BasicExtentReport.tearDown" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.BasicExtentReport -->
    </test> <!-- Test1 -->
    <test started-at="2019-06-19T16:21:53Z" name="Test2" finished-at="2019-06-19T16:22:35Z" duration-ms="42438">
      <class name="com.tests.LoginTests">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.tests.LoginTests@60d8c9b7]" started-at="2019-06-19T16:21:53Z" name="initialize" finished-at="2019-06-19T16:21:58Z" duration-ms="5446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setupTestData()[pri:0, instance:com.tests.LoginTests@60d8c9b7]" started-at="2019-06-19T16:21:58Z" name="setupTestData" finished-at="2019-06-19T16:22:01Z" depends-on-methods="com.tests.TestBase.initialize" duration-ms="2771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestData -->
        <test-method signature="TestLogin()[pri:0, instance:com.tests.LoginTests@60d8c9b7]" started-at="2019-06-19T16:22:01Z" name="TestLogin" description="LOGIN" finished-at="2019-06-19T16:22:34Z" duration-ms="33273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestLogin -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:com.tests.LoginTests@60d8c9b7]" started-at="2019-06-19T16:22:34Z" name="TeardownTest" finished-at="2019-06-19T16:22:35Z" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.LoginTests -->
    </test> <!-- Test2 -->
    <test started-at="2019-06-19T16:22:35Z" name="Test3" finished-at="2019-06-19T16:23:45Z" duration-ms="69385">
      <class name="com.tests.ScenarioTest1">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.tests.ScenarioTest1@34158c08]" started-at="2019-06-19T16:22:35Z" name="initialize" finished-at="2019-06-19T16:22:40Z" duration-ms="4619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="Test1()[pri:0, instance:com.tests.ScenarioTest1@34158c08]" started-at="2019-06-19T16:22:40Z" name="Test1" finished-at="2019-06-19T16:23:44Z" duration-ms="63852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:com.tests.ScenarioTest1@34158c08]" started-at="2019-06-19T16:23:44Z" name="TeardownTest" finished-at="2019-06-19T16:23:45Z" duration-ms="887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.ScenarioTest1 -->
    </test> <!-- Test3 -->
    <test started-at="2019-06-19T16:23:45Z" name="Test4" finished-at="2019-06-19T16:25:03Z" duration-ms="77910">
      <class name="com.tests.ScenarioTest2">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.tests.ScenarioTest2@2e6a5539]" started-at="2019-06-19T16:23:45Z" name="initialize" finished-at="2019-06-19T16:23:50Z" duration-ms="5806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="Test2()[pri:0, instance:com.tests.ScenarioTest2@2e6a5539]" started-at="2019-06-19T16:23:50Z" name="Test2" finished-at="2019-06-19T16:24:35Z" duration-ms="44888" status="FAIL">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:721)
at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741)
at com.pages.Google3rdResultTitle.TitleVerification(Google3rdResultTitle.java:22)
at com.tests.ScenarioTest2.Test2(ScenarioTest2.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="Test3()[pri:0, instance:com.tests.ScenarioTest2@2e6a5539]" started-at="2019-06-19T16:24:36Z" name="Test3" finished-at="2019-06-19T16:25:01Z" duration-ms="25351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:com.tests.ScenarioTest2@2e6a5539]" started-at="2019-06-19T16:25:01Z" name="TeardownTest" finished-at="2019-06-19T16:25:03Z" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.ScenarioTest2 -->
    </test> <!-- Test4 -->
    <test started-at="2019-06-19T16:25:03Z" name="Test5" finished-at="2019-06-19T16:25:15Z" duration-ms="12242">
      <class name="com.tests.SQLDBTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:com.tests.SQLDBTest@1b955cac]" started-at="2019-06-19T16:25:03Z" name="initialize" finished-at="2019-06-19T16:25:09Z" duration-ms="6287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="DbConnectTest()[pri:0, instance:com.tests.SQLDBTest@1b955cac]" started-at="2019-06-19T16:25:09Z" name="DbConnectTest" finished-at="2019-06-19T16:25:13Z" duration-ms="4450" status="FAIL">
          <exception class="com.mysql.cj.jdbc.exceptions.CommunicationsException">
            <message>
              <![CDATA[Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at com.tests.SQLDBTest.DbConnectTest(SQLDBTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:562)
at com.mysql.cj.protocol.a.NativeProtocol.readServerCapabilities(NativeProtocol.java:514)
at com.mysql.cj.protocol.a.NativeProtocol.beforeHandshake(NativeProtocol.java:404)
at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1450)
at com.mysql.cj.NativeSession.connect(NativeSession.java:165)
at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:955)
at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
... 31 more
Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.
at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:67)
at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:556)
... 37 more
]]>
            </full-stacktrace>
          </exception> <!-- com.mysql.cj.jdbc.exceptions.CommunicationsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DbConnectTest -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:com.tests.SQLDBTest@1b955cac]" started-at="2019-06-19T16:25:14Z" name="TeardownTest" finished-at="2019-06-19T16:25:15Z" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- com.tests.SQLDBTest -->
    </test> <!-- Test5 -->
  </suite> <!-- Suite -->
</testng-results>
