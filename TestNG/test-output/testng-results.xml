<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="5" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-07T16:54:14Z" name="Suite" finished-at="2019-08-07T16:54:18Z" duration-ms="3198">
    <groups>
    </groups>
    <test started-at="2019-08-07T16:54:14Z" name="Test" finished-at="2019-08-07T16:54:18Z" duration-ms="3198">
      <class name="QA.Tests.Test1">
        <test-method is-config="true" signature="BaseClassMethod1()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:16Z" name="BaseClassMethod1" finished-at="2019-08-07T16:54:16Z" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClassMethod1 -->
        <test-method is-config="true" signature="Test1MethodBT1()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:16Z" name="Test1MethodBT1" finished-at="2019-08-07T16:54:16Z" depends-on-methods="QA.Tests.TestBase.BaseClassMethod1" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1MethodBT1 -->
        <test-method is-config="true" signature="BaseClassMethod3()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:16Z" name="BaseClassMethod3" finished-at="2019-08-07T16:54:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClassMethod3 -->
        <test-method signature="Test1Method1()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:17Z" name="Test1Method1" finished-at="2019-08-07T16:54:17Z" duration-ms="671" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at QA.Tests.Test1.Test1Method1(Test1.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1Method1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:17Z" name="getResult" finished-at="2019-08-07T16:54:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test1Method1 status=FAILURE method=Test1.Test1Method1()[pri:0, instance:QA.Tests.Test1@68809cc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="BaseClassMethod3()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:17Z" name="BaseClassMethod3" finished-at="2019-08-07T16:54:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClassMethod3 -->
        <test-method signature="Test1Method2()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:17Z" name="Test1Method2" finished-at="2019-08-07T16:54:17Z" duration-ms="15" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at QA.Tests.Test1.Test1Method2(Test1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1Method2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:17Z" name="getResult" finished-at="2019-08-07T16:54:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test1Method2 status=FAILURE method=Test1.Test1Method2()[pri:0, instance:QA.Tests.Test1@68809cc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:18Z" name="TeardownTest" finished-at="2019-08-07T16:54:18Z" depends-on-methods="QA.Tests.Test1.Test1MethodAT1" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
        <test-method is-config="true" signature="Test1MethodAT1()[pri:0, instance:QA.Tests.Test1@68809cc7]" started-at="2019-08-07T16:54:18Z" name="Test1MethodAT1" finished-at="2019-08-07T16:54:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1MethodAT1 -->
      </class> <!-- QA.Tests.Test1 -->
      <class name="QA.Tests.Test2">
        <test-method signature="Test2Method1()[pri:0, instance:QA.Tests.Test2@7051777c]" started-at="2019-08-07T16:54:17Z" name="Test2Method1" finished-at="2019-08-07T16:54:17Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2Method1 -->
        <test-method is-config="true" signature="BaseClassMethod3()[pri:0, instance:QA.Tests.Test2@7051777c]" started-at="2019-08-07T16:54:17Z" name="BaseClassMethod3" finished-at="2019-08-07T16:54:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseClassMethod3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test2@7051777c]" started-at="2019-08-07T16:54:17Z" name="getResult" finished-at="2019-08-07T16:54:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2Method1 status=SUCCESS method=Test2.Test2Method1()[pri:0, instance:QA.Tests.Test2@7051777c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- QA.Tests.Test2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
