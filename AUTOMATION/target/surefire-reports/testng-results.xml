<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-03T07:36:38 GMT-04:00" name="Suite" finished-at="2023-07-03T07:36:39 GMT-04:00" duration-ms="417">
    <groups>
    </groups>
    <test started-at="2023-07-03T07:36:38 GMT-04:00" name="Test" finished-at="2023-07-03T07:36:39 GMT-04:00" duration-ms="417">
      <class name="SQA.AUTOMATION.ExtentReport">
        <test-method is-config="true" signature="startReport()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="startReport" finished-at="2023-07-03T07:36:38 GMT-04:00" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="demoReportFail()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="demoReportFail" finished-at="2023-07-03T07:36:38 GMT-04:00" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at SQA.AUTOMATION.ExtentReport.demoReportFail(ExtentReport.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoReportFail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="getResult" finished-at="2023-07-03T07:36:38 GMT-04:00" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoReportFail status=FAILURE method=ExtentReport.demoReportFail()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="demoReportPass()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="demoReportPass" finished-at="2023-07-03T07:36:38 GMT-04:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoReportPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="getResult" finished-at="2023-07-03T07:36:38 GMT-04:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoReportPass status=SUCCESS method=ExtentReport.demoReportPass()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endreport()[pri:0, instance:SQA.AUTOMATION.ExtentReport@769e7ee8]" started-at="2023-07-03T07:36:38 GMT-04:00" name="endreport" finished-at="2023-07-03T07:36:39 GMT-04:00" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endreport -->
      </class> <!-- SQA.AUTOMATION.ExtentReport -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
