<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="6" total="24" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="74502" started-at="2019-07-25T12:12:39Z" finished-at="2019-07-25T12:13:53Z">
    <groups>
    </groups>
    <test name="Sample Automation Test" duration-ms="74502" started-at="2019-07-25T12:12:39Z" finished-at="2019-07-25T12:13:53Z">
      <class name="QA.Tests.Test3">
        <test-method status="PASS" signature="NAVIGATE_TO_GOOGLE()[pri:11, instance:QA.Tests.Test3@58496c97]" name="NAVIGATE_TO_GOOGLE" duration-ms="2619" started-at="2019-07-25T12:13:18Z" description="Google Search" finished-at="2019-07-25T12:13:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NAVIGATE_TO_GOOGLE -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test3@58496c97]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:20Z" finished-at="2019-07-25T12:13:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NAVIGATE_TO_GOOGLE status=SUCCESS method=Test3.NAVIGATE_TO_GOOGLE()[pri:11, instance:QA.Tests.Test3@58496c97] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CLICK_ON_3rdRESULT()[pri:12, instance:QA.Tests.Test3@58496c97]" name="CLICK_ON_3rdRESULT" duration-ms="1650" started-at="2019-07-25T12:13:20Z" description="Click on 3rd Result of Search" finished-at="2019-07-25T12:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLICK_ON_3rdRESULT -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test3@58496c97]" name="getResult" is-config="true" duration-ms="0" started-at="2019-07-25T12:13:22Z" finished-at="2019-07-25T12:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLICK_ON_3rdRESULT status=SUCCESS method=Test3.CLICK_ON_3rdRESULT()[pri:12, instance:QA.Tests.Test3@58496c97] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="RESULT_TITLE_VERIFY()[pri:13, instance:QA.Tests.Test3@58496c97]" name="RESULT_TITLE_VERIFY" duration-ms="29" started-at="2019-07-25T12:13:22Z" description="3rd RESULT TITLE VERIFY" finished-at="2019-07-25T12:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RESULT_TITLE_VERIFY -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test3@58496c97]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:22Z" finished-at="2019-07-25T12:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RESULT_TITLE_VERIFY status=SUCCESS method=Test3.RESULT_TITLE_VERIFY()[pri:13, instance:QA.Tests.Test3@58496c97] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="GoogleNews_TitleVerify()[pri:14, instance:QA.Tests.Test3@58496c97]" name="GoogleNews_TitleVerify" duration-ms="5624" started-at="2019-07-25T12:13:22Z" description="Google NEWS Title Verify" finished-at="2019-07-25T12:13:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at QA.Tests.Test3.GoogleNews_TitleVerify(Test3.java:76)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoogleNews_TitleVerify -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test3@58496c97]" name="getResult" is-config="true" duration-ms="751" started-at="2019-07-25T12:13:28Z" finished-at="2019-07-25T12:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GoogleNews_TitleVerify status=FAILURE method=Test3.GoogleNews_TitleVerify()[pri:14, instance:QA.Tests.Test3@58496c97] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- QA.Tests.Test3 -->
      <class name="QA.Tests.Test4">
        <test-method status="PASS" signature="SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b]" name="SFDCLogincheck" duration-ms="7188" started-at="2019-07-25T12:13:30Z" description="SFDC INVALID ID/PASS LOGIN CHECK" data-provider="LoginProvider" finished-at="2019-07-25T12:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP_TEST_1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gtl@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFDCLogincheck -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test4@ad3324b]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:38Z" finished-at="2019-07-25T12:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFDCLogincheck status=SUCCESS method=Test4.SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b]" name="SFDCLogincheck" duration-ms="1890" started-at="2019-07-25T12:13:38Z" description="SFDC INVALID ID/PASS LOGIN CHECK" data-provider="LoginProvider" finished-at="2019-07-25T12:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP_TEST_2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gtl@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFDCLogincheck -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test4@ad3324b]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:39Z" finished-at="2019-07-25T12:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFDCLogincheck status=SUCCESS method=Test4.SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b]" name="SFDCLogincheck" duration-ms="3158" started-at="2019-07-25T12:13:39Z" description="SFDC INVALID ID/PASS LOGIN CHECK" data-provider="LoginProvider" finished-at="2019-07-25T12:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP_TEST_3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gtl@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFDCLogincheck -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test4@ad3324b]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:43Z" finished-at="2019-07-25T12:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFDCLogincheck status=SUCCESS method=Test4.SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b]" name="SFDCLogincheck" duration-ms="3697" started-at="2019-07-25T12:13:43Z" description="SFDC INVALID ID/PASS LOGIN CHECK" data-provider="LoginProvider" finished-at="2019-07-25T12:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP_TEST_4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gtl@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFDCLogincheck -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test4@ad3324b]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:46Z" finished-at="2019-07-25T12:13:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFDCLogincheck status=SUCCESS method=Test4.SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b]" name="SFDCLogincheck" duration-ms="5424" started-at="2019-07-25T12:13:46Z" description="SFDC INVALID ID/PASS LOGIN CHECK" data-provider="LoginProvider" finished-at="2019-07-25T12:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP_TEST_5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gtl@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SFDCLogincheck -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test4@ad3324b]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:52Z" finished-at="2019-07-25T12:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SFDCLogincheck status=SUCCESS method=Test4.SFDCLogincheck(java.lang.String, java.lang.String)[pri:15, instance:QA.Tests.Test4@ad3324b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- QA.Tests.Test4 -->
      <class name="QA.Tests.Test1">
        <test-method status="PASS" signature="initialize()[pri:0, instance:QA.Tests.Test1@764cba]" name="initialize" is-config="true" duration-ms="6018" started-at="2019-07-25T12:12:39Z" finished-at="2019-07-25T12:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="NAVIGATE_TO_URL_CLICK_SIGN()[pri:1, instance:QA.Tests.Test1@764cba]" name="NAVIGATE_TO_URL_CLICK_SIGN" duration-ms="8946" started-at="2019-07-25T12:12:45Z" description="Navigate to URL" finished-at="2019-07-25T12:12:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NAVIGATE_TO_URL_CLICK_SIGN -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="25" started-at="2019-07-25T12:12:54Z" finished-at="2019-07-25T12:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NAVIGATE_TO_URL_CLICK_SIGN status=SUCCESS method=Test1.NAVIGATE_TO_URL_CLICK_SIGN()[pri:1, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ENTER_UNAME_PWRD_LOGIN()[pri:2, instance:QA.Tests.Test1@764cba]" name="ENTER_UNAME_PWRD_LOGIN" duration-ms="2190" started-at="2019-07-25T12:12:54Z" description="LOGIN" finished-at="2019-07-25T12:12:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ENTER_UNAME_PWRD_LOGIN -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:12:56Z" finished-at="2019-07-25T12:12:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ENTER_UNAME_PWRD_LOGIN status=SUCCESS method=Test1.ENTER_UNAME_PWRD_LOGIN()[pri:2, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CLICK_ON_WOMAN_TAB()[pri:3, instance:QA.Tests.Test1@764cba]" name="CLICK_ON_WOMAN_TAB" duration-ms="2858" started-at="2019-07-25T12:12:56Z" description="CLICK ON WOMAN TAB" finished-at="2019-07-25T12:12:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLICK_ON_WOMAN_TAB -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="0" started-at="2019-07-25T12:12:59Z" finished-at="2019-07-25T12:12:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLICK_ON_WOMAN_TAB status=SUCCESS method=Test1.CLICK_ON_WOMAN_TAB()[pri:3, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CLICK_ON_WOMAN_TAB_TOPS()[pri:4, instance:QA.Tests.Test1@764cba]" name="CLICK_ON_WOMAN_TAB_TOPS" duration-ms="1717" started-at="2019-07-25T12:12:59Z" description="NAVIGATE TO TOPS" finished-at="2019-07-25T12:13:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLICK_ON_WOMAN_TAB_TOPS -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:01Z" finished-at="2019-07-25T12:13:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLICK_ON_WOMAN_TAB_TOPS status=SUCCESS method=Test1.CLICK_ON_WOMAN_TAB_TOPS()[pri:4, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CLICK_ON_WOMAN_TSHIRTS()[pri:5, instance:QA.Tests.Test1@764cba]" name="CLICK_ON_WOMAN_TSHIRTS" duration-ms="1894" started-at="2019-07-25T12:13:01Z" description="CLICK ON TSHIRTS" finished-at="2019-07-25T12:13:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLICK_ON_WOMAN_TSHIRTS -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:03Z" finished-at="2019-07-25T12:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLICK_ON_WOMAN_TSHIRTS status=SUCCESS method=Test1.CLICK_ON_WOMAN_TSHIRTS()[pri:5, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CLICK_ON_PRODUCT()[pri:6, instance:QA.Tests.Test1@764cba]" name="CLICK_ON_PRODUCT" duration-ms="2703" started-at="2019-07-25T12:13:03Z" description="CLICK ON PRODUCT TEST" finished-at="2019-07-25T12:13:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CLICK_ON_PRODUCT -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:06Z" finished-at="2019-07-25T12:13:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CLICK_ON_PRODUCT status=SUCCESS method=Test1.CLICK_ON_PRODUCT()[pri:6, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="PRODUCT_ADD_TO_CART()[pri:7, instance:QA.Tests.Test1@764cba]" name="PRODUCT_ADD_TO_CART" duration-ms="10362" started-at="2019-07-25T12:13:06Z" description="ADD TO CART" finished-at="2019-07-25T12:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PRODUCT_ADD_TO_CART -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test1@764cba]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:16Z" finished-at="2019-07-25T12:13:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PRODUCT_ADD_TO_CART status=SUCCESS method=Test1.PRODUCT_ADD_TO_CART()[pri:7, instance:QA.Tests.Test1@764cba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="TeardownTest()[pri:0, instance:QA.Tests.Test1@764cba]" name="TeardownTest" is-config="true" duration-ms="1386" started-at="2019-07-25T12:13:52Z" finished-at="2019-07-25T12:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- QA.Tests.Test1 -->
      <class name="QA.Tests.Test2">
        <test-method status="PASS" signature="PATINET_DEMO_CREATION()[pri:9, instance:QA.Tests.Test2@523d6bdb]" name="PATINET_DEMO_CREATION" duration-ms="6" started-at="2019-07-25T12:13:16Z" description="PATIENT DEMOGRAPHIC" finished-at="2019-07-25T12:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PATINET_DEMO_CREATION -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test2@523d6bdb]" name="getResult" is-config="true" duration-ms="1" started-at="2019-07-25T12:13:16Z" finished-at="2019-07-25T12:13:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PATINET_DEMO_CREATION status=SUCCESS method=Test2.PATINET_DEMO_CREATION()[pri:9, instance:QA.Tests.Test2@523d6bdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="PATINET_DEMO_UPDATE()[pri:10, instance:QA.Tests.Test2@523d6bdb]" name="PATINET_DEMO_UPDATE" duration-ms="1264" started-at="2019-07-25T12:13:16Z" description="PATIENT DEMOGRAPHIC UPDATE" finished-at="2019-07-25T12:13:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at QA.Tests.Test2.PATINET_DEMO_UPDATE(Test2.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PATINET_DEMO_UPDATE -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:QA.Tests.Test2@523d6bdb]" name="getResult" is-config="true" duration-ms="418" started-at="2019-07-25T12:13:17Z" finished-at="2019-07-25T12:13:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PATINET_DEMO_UPDATE status=FAILURE method=Test2.PATINET_DEMO_UPDATE()[pri:10, instance:QA.Tests.Test2@523d6bdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- QA.Tests.Test2 -->
    </test> <!-- Sample Automation Test -->
  </suite> <!-- Suite -->
</testng-results>
